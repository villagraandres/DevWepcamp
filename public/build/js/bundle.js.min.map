{"version":3,"sources":["tags.js"],"names":["server","window","location","origin","tagsInput","document","querySelector","eliminarBtn","querySelectorAll","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","forEach","tag","etiqueta","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","e","target","remove","filter","value","toString","split","addEventListener","keyCode","trim","lenght","preventDefault","boton","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","id","dataset","async","datos","FormData","append","url","respuesta","fetch","method","body","json","setTimeout","reload","eliminar"],"mappings":"CAAA,WACA,MAAAA,EAAAC,OAAAC,SAAAC,OACAC,EAAAC,SAAAC,cAAA,eACAC,EAAAF,SAAAG,iBAAA,oBAGA,GAAAJ,EAAA,CAEA,MAAAK,EAAAJ,SAAAC,cAAA,SACAI,EAAAL,SAAAC,cAAA,iBAEA,IAAAK,EAAA,GAyBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAG,QAAAC,IACA,MAAAC,EAAAX,SAAAY,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAH,YAAAE,EACAC,EAAAI,WAAAC,EACAZ,EAAAa,YAAAN,KAEAO,IAGA,SAAAF,EAAAG,GACAA,EAAAC,OAAAC,SACAf,EAAAA,EAAAgB,OAAAZ,GAAAA,IAAAS,EAAAC,OAAAZ,aACAU,IAGA,SAAAA,IACAb,EAAAkB,MAAAjB,EAAAkB,WAvCA,KAAAnB,EAAAkB,QACAjB,EAAAD,EAAAkB,MAAAE,MAAA,KACAlB,KAIAR,EAAA2B,iBAAA,YAEA,SAAAP,GACA,GAAA,KAAAA,EAAAQ,QAAA,CACA,GAAA,KAAAR,EAAAC,OAAAG,MAAAK,QAAAT,EAAAC,OAAAS,OAAA,EACA,OAEAV,EAAAW,iBACAxB,EAAA,IAAAA,EAAAa,EAAAC,OAAAG,MAAAK,QACA7B,EAAAwB,MAAA,GACAhB,QA2BA,GAAAL,EAAA,CAEAA,EAAAO,QAAAsB,IACAA,EAAAL,iBAAA,SAAA,SAAAP,GAEAa,KAAAC,KAAA,CACAC,MAAA,iCACAC,KAAA,oCACAC,KAAA,UACAC,kBAAA,EACAC,mBAAA,UACAC,kBAAA,OACAC,kBAAA,mBACAC,KAAAC,IACAA,EAAAC,cACAX,KAAAC,KACA,aACA,2CACA,WAEAW,GAAAzB,EAAAC,OAAAyB,QAAAD,GAaAE,iBACA,MAAAC,EAAA,IAAAC,SACAD,EAAAE,OAAA,KAAAL,IAEA,IACA,MAAAM,EAAAvD,EAAA,gBAEAwD,QAAAC,MAAAF,EAAA,CACAG,OAAA,OACAC,KAAAP,UAIAI,EAAAI,OAAAd,KAAA,KACAe,WAAA,KACA5D,OAAAC,SAAA4D,UACA,OAIA,QA/BAC,YAjFA","file":"bundle.js","sourcesContent":["(function() {\r\n    const server = window.location.origin;\r\n    const tagsInput = document.querySelector('#tags_input')\r\n    const eliminarBtn = document.querySelectorAll('.botonesEliminar');\r\n  \r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n       \r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '' ) {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n \r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.lenght < 1) { \r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta)\r\n            })\r\n            actualizarInputHidden();\r\n        }   \r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n           tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n    if(eliminarBtn){\r\n\r\n      eliminarBtn.forEach(boton=> {\r\n        boton.addEventListener('click',function (e) {\r\n          \r\n            Swal.fire({\r\n                title: 'Â¿Seguro que deseas el ponente?',\r\n                text: \"Este cambio no se podra revertir!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Si, eliminalo!'\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  Swal.fire(\r\n                    'Elimanado!',\r\n                    'El ponente se ha eliminado correctamente',\r\n                    'success'\r\n                  )\r\n                  id= e.target.dataset.id\r\n                 \r\n                eliminar();\r\n\r\n                    \r\n                   \r\n                }\r\n               \r\n              })\r\n        });\r\n      })\r\n\r\n\r\n  async    function eliminar(){\r\n        const datos= new FormData();\r\n        datos.append('id',id);\r\n\r\n        try{\r\n            const url=`${server}/api/eliminar`;\r\n\r\n            const respuesta= await fetch(url,{\r\n                method:'POST',\r\n                body:datos\r\n            })\r\n\r\n\r\n          const resultado= await respuesta.json().then(()=>{\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1000);\r\n          })\r\n            \r\n\r\n        }catch{\r\n\r\n        }\r\n      }\r\n\r\n      \r\n\r\n    }\r\n})();"]}